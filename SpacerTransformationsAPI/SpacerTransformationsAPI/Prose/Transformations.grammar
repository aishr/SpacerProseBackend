using SpacerTransformationsAPI.Models;
using SpacerTransformationsAPI.Prose;
using System.Collections.Generic;

using semantics SpacerTransformationsAPI.Prose.Semantics;
using learners SpacerTransformationsAPI.Prose.WitnessFunctions;

language Transformations;

@complete feature double Score = RankingScore;

@start Node outputTree := Id(inputTree) | Move(@recurse[3] outputTree, position, direction); 
int position := IndexByName(outputTree, name) | IndexFromFront(outputTree, index) | IndexFromBack(outputTree, index);

@input Node inputTree;
string name;
int index;
Tuple<int, bool> direction;